#!/bin/bash
##
## Copyright 2019 Luis_Pulido_Diaz
##
## Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),      ##
## to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,      ##
## and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:              ##
##                                                                                                                                                         ##
## The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.                          ##
##                                                                                                                                                         ##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     ##
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      ##
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS    ##
## IN THE SOFTWARE.
##
PROGRAM_NAME="splace"
PROGRAM_VERSION="0.1.movil"
LICENSE=$(cat <<EOF
##
## Copyright 2019 Luis_Pulido_Diaz
##
## Permission is hereby granted, free of charge, to any pe>
## to deal in the Software without restriction, including >
## and/or sell copies of the Software, and to permit perso>
##                                                        >
## The above copyright notice and this permission notice s>
##                                                        >
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF A>
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. I>
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OT>
## IN THE SOFTWARE.
##
EOF
)
## Replace the > in the CONSOLE_THINGY
## with your own string like ~$ or ~#
## or whatever need. Leave a space for
## better esthetics in the console.
CONSOLE_THINGY="> "
PLACED="$HOME/lkso.data/$PROGRAM_NAME"
PLACEDD="$PLACED/places.d"
PLACEF="$PLACED/.placesfile"

if [[ ! "$(command -v aauuid)" ]] ; then
	cat <<EOF
We are deeply sorry, but this program
requires aauuid.
Fortunately, this program comes with an embedded aauuid
installer. Would you like to install it now?
EOF
	read -p " y/n "
	case "$REPLY" in
		n|no)
			echo "Bye"
			exit
		;;
		*) ;;
	esac
	aauuid_code=$(cat <<EOF
#!/bin/bash
$LICENSE
#
# This aauuid program was generated by $PROGRAM_NAME Version $PROGRAM_VERSION ##
#

case "\$1" in
	--version)
		echo "0.1.embedded"
	;;
	--help)
		echo "Use \$0 to generate a pseudo-uuid in the namespace 4"
	;;
	*)
		cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 31 | head -n 1 | sed -e 's/\(........\)\(....\)\(...\)\(....\)\(............\)/\1-\2-4\3-\4-\5/'
	;;
esac
EOF
)
	programf="$( dirname $0 )/aauuid"
	touch "$programf"
	echo "$aauuid_code" >> "$programf"
	chmod +x "$programf"
	echo "Done. Now you have aauuid installed."
fi

place(){
	case "$1" in
		--version) echo "$PROGRAM_VERSION"; ;;
		--help)
			cat <<EOF

$PROGRAM_NAME
   Version $PROGRAM_VERSION

This program uses openssl to store your places encrypted. It is for experimental purposes.
This is a fork of the original "place" program.

usage:
	splace s				Saves the current directory
	splace l				Prints out the last saved directory
	splace p				Pops the last saved directory (outputs and removes it)

	splace n x			Prints the x'th stored place, from newest to oldest

					This is a super simple implementation of a lifo queue written
					in bash for you to store your places.

	splace --version 		Shows place version.
	splace --help 			Shows this screen.
EOF
	;;
	*)
		run "$@"
	;;
	esac
}
check_placef(){
	if [ ! -f "$PLACEF" ] ; then
		mkdir -p "$PLACED"
		touch "$PLACEF"
	fi
}
encrypt(){
	if [[ ! -f "$PLACED/$KEYF" ]] ; then
		echo "E: Key file is not present" >&2
		echo "   Try creating the pair with --build" >&2
		exit 1
	fi
	aauuida="$(test -x $(command -v aauuid) && aauuid)"
	aauuidb="$(test -x $(command -v aauuid) && aauuid)"
	tmpfile="$PLACED/$aauuida.txt"
	touch "$tmpfile"
	echo "$@" >> "$tmpfile"
	tmpfilee="$PLACED/$aauuidb.dat"
	key="$(<$PLACED/$KEYF)"
	openssl rsautl -encrypt -inkey "$PLACED/$PKEYF" -pubin -in "$tmpfile" -out "$tmpfilee"
	base64 "$tmpfilee"
	rm "$tmpfile" "$tmpfilee"
}
decrypt(){
	aauuida="$(test -x $(command -v aauuid) && aauuid)"
	aauuidb="$(test -x $(command -v aauuid) && aauuid)"
	tmpfile="$PLACED/$aauuida.dat"
	tmpfilee="$PLACED/$aauuidb.txt"
	echo "$@" | base64 -d >> "$tmpfile"
	openssl rsautl -decrypt -inkey "$PLACED/$KEYF" -in "$tmpfile" -out "$tmpfilee"
	echo "$(<$tmpfilee)"
	rm "$tmpfile" "$tmpfilee"
}
KEYF=".spkey.pem"
PKEYF=".ppkey.pem"
build(){
	if [[ ! -x "$(command -v openssl)" ]] ; then
		echo "E: This program requires openssl" >&2
		exit 1
	fi
	mkdir -p "$PLACED"
	openssl genrsa -out "$PLACED/$KEYF" 1024 >/dev/null 2>&1
	openssl rsa -in "$PLACED/$KEYF" -out "$PLACED/$PKEYF" -outform PEM -pubout >/dev/null 2>&1
	mkdir -p "$PLACEDD"
}
check_empty(){
	tryn="$(ls -l *.dat | wc -l)"
	if [[ "$tryn" -lt 1 ]] ; then
		echo "Places program is empty"
		exit
	fi
}
saveacrypt(){
	ts="$(aauuid)"
	touch "$PLACESDD/$ts"
	encrypt "$@" >> "$PLACESDD/$ts"
}
run(){
	check_placef
	case "$1" in
		--build)
			case "$2" in
				--force) ;;
				*)
					read -p "Build now? y/n "
					case "$REPLY" in
						y|yes) ;;
						n|no)
							echo "Bye"
							exit 0
						;;
					esac
				;;
			esac
			build
			echo "Done"
		;;
		s)
			saveacrypt "$(pwd)"
			echo "Done"
		;;
		l)
			check_empty
			decrypt "$(tail -n 1 $PLACEF)"
		;;
		p)
			check_empty
			lastb="$(tail -n 1 $PLACEF)"
			head -n -1 "$PLACEF" > "$PLACED/tmpfile"
			mv "$PLACED/tmpfile" "$PLACEF"
			decrypt "$lastb"
		;;
		n)
			maxn="$(cat $PLACEF | wc -l)"
			if [[ "$2" -gt "$maxn" || "$2" -lt 1 ]] ; then
				echo "E: Max number is $maxn" >&2
				exit
			fi
			decrypt "$(tail -n $2 $PLACEF | head -n 1)"
		;;
		*)
			place --help
		;;
	esac
}
place "$@"
